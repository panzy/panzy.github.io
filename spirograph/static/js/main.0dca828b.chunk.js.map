{"version":3,"sources":["App.js","Spirograph.js","ParamEditor.js","reportWebVitals.js","index.js"],"names":["App","graph","Spirograph","global","useState","r2","r3","reverse","params","setParams","useEffect","start","stop","className","defaultValue","onChange","p","dist2","x1","y1","x2","y2","loop","ctx","width","height","a1","a2","track3","track4","cx","cy","r1","Math","min","delta1","PI","r2Percentage","delta2","r3Percentage","r4","max","x","cos","y","sin","x3","y3","x4","y4","length","push","track3Full","track4Full","lineWidth","fillStyle","fillRect","strokeStyle","beginPath","moveTo","forEach","lineTo","stroke","arc","dryRunTimes","stopped","requestAnimationFrame","pause","resume","canvas","document","querySelector","getContext","window","innerWidth","innerHeight","ParamEditor","value","setVal","onChange_","e","newValue","target","id","parseInt","htmlFor","type","checked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0dca828b.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Spirograph from './Spirograph';\r\nimport ParamEditor from './ParamEditor';\r\n\r\nfunction App() {\r\n\r\n  const graph = new Spirograph();\r\n\r\n  // export for inspecting\r\n  global.graph = graph;\r\n\r\n  // params\r\n  const [params, setParams] = useState({r2: 32, r3: 50, reverse: true});\r\n\r\n  useEffect(() => {\r\n    graph.start(params);\r\n    return graph.stop;\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <canvas/>\r\n      </header>\r\n      <ParamEditor\r\n        defaultValue={params}\r\n        onChange={p => setParams(p)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","function dist2(x1, y1, x2, y2) {\r\n  return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\r\n}\r\n\r\nclass Spirograph {\r\n\r\n  loop = () => {\r\n\r\n    const GREEN = 'rgba(0, 255, 0, .5)';\r\n    const RED = 'rgba(255, 0, 0, 1)';\r\n    const YELLOW = 'rgba(255, 255, 0, .5)';\r\n\r\n    const {ctx, width, height, a1, a2, reverse, track3, track4} = this;\r\n\r\n    // the center\r\n    const cx = width / 2;\r\n    const cy = height / 2;\r\n\r\n    // the outter gear\r\n    const r1 = Math.min(width, height) * 0.4;\r\n    // angle delta per tick\r\n    const delta1 = Math.PI / 90;\r\n\r\n    // the inner gear\r\n    const r2 = r1 * this.r2Percentage / 100.0;\r\n    const delta2 = (this.r2Percentage > 0 ? delta1 * 100.0 / this.r2Percentage : 0) * (reverse ? 1 : -1);\r\n\r\n    // the pencil's position, specified by its distance to the inner gear's center.\r\n    const r3 = r2 * this.r3Percentage / 100.0;\r\n    // another pencil, slightly offset\r\n    const r4 = Math.max(0, r3 - 1);\r\n\r\n    let x = cx + (r1 - r2) * Math.cos(a1);\r\n    let y = cy + (r1 - r2) * Math.sin(a1);\r\n\r\n    // the 1st pencil's current coordinates\r\n    let x3 = x + r3 * Math.cos(a2);\r\n    let y3 = y + r3 * Math.sin(a2);\r\n\r\n    // the 2nd pencil's current coordinates\r\n    let x4 = x + r4 * Math.cos(a2);\r\n    let y4 = y + r4 * Math.sin(a2);\r\n\r\n    // progress the angles for next frame\r\n    this.a1 += delta1;\r\n    this.a2 += delta2;\r\n\r\n    // append to track3\r\n    if (track3.length > 0 && dist2(x3, y3, track3[0][0], track3[0][1]) < 0.01) {\r\n      track3.push([x3, y3]);\r\n      this.track3Full = true;\r\n    }\r\n    if (!this.track3Full) {\r\n      track3.push([x3, y3]);\r\n    }\r\n\r\n    // append to track4\r\n    if (track4.length > 2 && dist2(x4, y4, track4[0][0], track4[0][1]) < 0.01) {\r\n      this.track4Full = true;\r\n      track4.push([x4, y4]);\r\n    }\r\n    if (!this.track4Full) {\r\n      track4.push([x4, y4]);\r\n    }\r\n\r\n    //\r\n    // draw\r\n    //\r\n\r\n    ctx.lineWidth = 1;\r\n\r\n    // fill the canvas\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.25)';\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    if (track3.length > 2) {\r\n      ctx.strokeStyle = RED;\r\n      ctx.beginPath();\r\n      ctx.moveTo(track3[0][0], track3[0][1]);\r\n      track3.forEach(([x, y]) => ctx.lineTo(x, y));\r\n      ctx.stroke();\r\n    }\r\n\r\n    if (track4.length > 2) {\r\n      ctx.strokeStyle = YELLOW;\r\n      ctx.beginPath();\r\n      ctx.moveTo(track4[0][0], track4[0][1]);\r\n      track4.forEach(([x, y]) => ctx.lineTo(x, y));\r\n      ctx.stroke();\r\n    }\r\n\r\n    if (!this.track3Full) {\r\n      // draw the gears\r\n      ctx.strokeStyle = GREEN;\r\n      // outter gear\r\n      ctx.beginPath();\r\n      ctx.arc(cx, cy, r1, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n      // inner gear\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, r2, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n      // radius of the inner gear\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x3, y3);\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Dry run several times before stop the animation to get rid of the gears completely.\r\n    if (this.track3Full && ++this.dryRunTimes > 10) {\r\n      this.stopped = true;\r\n    }\r\n\r\n    if (!this.stopped) {\r\n      // call for next frame\r\n      requestAnimationFrame(this.loop);\r\n    }\r\n  }\r\n\r\n  pause = () => {\r\n    this.stop();\r\n  }\r\n\r\n  resume = () => {\r\n    this.stopped = false;\r\n    this.loop();\r\n  }\r\n\r\n  start = ({r2, r3, reverse}) => {\r\n    let canvas = document.querySelector('canvas');\r\n    this.ctx = canvas.getContext('2d');\r\n    this.width = canvas.width = window.innerWidth;\r\n    this.height = canvas.height = window.innerHeight;\r\n    this.r2Percentage = r2;\r\n    this.r3Percentage = r3;\r\n    this.reverse = reverse; // rever inner gear's rotation?\r\n    this.stopped = false;\r\n    this.dryRunTimes = 0; // each loop after the tracks are full is a dry run\r\n    this.a1 = Math.PI * 1.5;\r\n    this.a2 = this.a1;\r\n    this.track3 = [];\r\n    this.track3Full = false;\r\n    this.track4 = [];\r\n    this.track4Full = false;\r\n\r\n    this.loop();\r\n  }\r\n\r\n  stop = () => {\r\n    this.stopped = true;\r\n  }\r\n}\r\n\r\nexport default Spirograph;\r\n","import { useState } from 'react';\r\nimport './ParamEditor.css';\r\n\r\nfunction ParamEditor({defaultValue, onChange}) {\r\n  const [value, setVal] = useState(defaultValue ?? {r2: 0, r3: 0});\r\n\r\n  const onChange_ = e => {\r\n    const newValue = {...value};\r\n\r\n    if (e.target.id === 'reverse') // bool\r\n      newValue.reverse = !newValue.reverse;\r\n    else // int\r\n      newValue[e.target.id] = parseInt(e.target.value);\r\n\r\n    setVal(newValue);\r\n    if (onChange)\r\n      onChange(newValue);\r\n  }\r\n\r\n  return <div id='ParamEditor'>\r\n    <label htmlFor='r2'>Inner gear's radius ({value.r2}%)</label>\r\n    <br/>\r\n    <input type='range' id='r2' min='0' max='100' value={value.r2} onChange={onChange_}/>\r\n    <br/>\r\n    <label htmlFor='r3'>Pencil's position ({value.r3}%)</label>\r\n    <br/>\r\n    <input type='range' id='r3' min='0' max='100' value={value.r3} onChange={onChange_}/>\r\n    <br/>\r\n    <label htmlFor='reverse'>Reverse inner gear</label>\r\n    <input type='checkbox' id='reverse' checked={value.reverse} onChange={onChange_}/>\r\n  </div>;\r\n}\r\n\r\nexport default ParamEditor;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}